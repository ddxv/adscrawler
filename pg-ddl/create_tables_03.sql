-- ISO 3166 countries to PostgreSQL
CREATE TABLE IF NOT EXISTS countries (
    id int4 NOT NULL,
    alpha2 varchar(2) NOT NULL,
    alpha3 varchar(3) NOT NULL,
    langcs varchar(45) NOT NULL,
    langde varchar(45) NOT NULL,
    langen varchar(45) NOT NULL,
    langes varchar(45) NOT NULL,
    langfr varchar(45) NOT NULL,
    langit varchar(45) NOT NULL,
    langnl varchar(45) NOT NULL,
    CONSTRAINT countries_pk PRIMARY KEY (id),
    CONSTRAINT countries_al2 UNIQUE (alpha2),
    CONSTRAINT countries_al3 UNIQUE (alpha3)
);


CREATE TABLE public.trackers (
    id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar NOT NULL,
    CONSTRAINT trackers_pk PRIMARY KEY (id)
);


CREATE TABLE public.tracker_package_map (
    id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    tracker int4 NOT NULL,
    package_pattern varchar NOT NULL,
    CONSTRAINT tracker_package_map_pk PRIMARY KEY (id),
    CONSTRAINT fk_tracker_pkg_map FOREIGN KEY (
        tracker
    ) REFERENCES trackers (id)
);


CREATE TABLE public.networks (
    id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar NOT NULL,
    CONSTRAINT networks_pk PRIMARY KEY (id)
);


CREATE TABLE public.network_package_map (
    id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    network int4 NOT NULL,
    package_pattern varchar NOT NULL,
    CONSTRAINT network_package_map_pk PRIMARY KEY (id),
    CONSTRAINT fk_network_pkg_map FOREIGN KEY (
        network
    ) REFERENCES networks (id)
);

CREATE TABLE adtech.company_domain_mapping (
    company_id int REFERENCES adtech.companies (id),
    domain_id int REFERENCES public.ad_domains (id),
    PRIMARY KEY (company_id, domain_id)
);

CREATE TABLE user_requested_scan (
    id serial PRIMARY KEY,
    store_id varchar NOT NULL,
    created_at timestamp DEFAULT CURRENT_TIMESTAMP
);

-- public.keywords definition

-- Drop table

-- DROP TABLE public.keywords;

CREATE TABLE public.keywords (
    id serial4 NOT NULL,
    keyword_text varchar(255) NOT NULL,
    CONSTRAINT keywords_pkey PRIMARY KEY (id),
    CONSTRAINT unique_keyword UNIQUE (keyword_text)
);

CREATE TABLE public.languages (
    id serial2 NOT NULL,
    language_slug varchar(5),
    CONSTRAINT language_pkey PRIMARY KEY (id),
    CONSTRAINT language_unique_key UNIQUE (language_slug)
);

CREATE TABLE public.app_keyword_rankings (
    id serial4 NOT NULL,
    crawled_date date NOT NULL,
    country int4 NOT NULL,
    lang int2 NOT NULL,
    keyword int4 NOT NULL,
    rank int4 NOT NULL,
    store_app int4 NOT NULL,
    CONSTRAINT app_keyword_rankings_pkey PRIMARY KEY (id),
    CONSTRAINT unique_keyword_ranking UNIQUE (
        crawled_date, country, lang, rank, store_app, keyword
    ),
    CONSTRAINT fk_country FOREIGN KEY (country) REFERENCES public.countries (
        id
    ),
    CONSTRAINT fk_language FOREIGN KEY (lang) REFERENCES public.languages (id),
    CONSTRAINT fk_store_app FOREIGN KEY (
        store_app
    ) REFERENCES public.store_apps (id),
    CONSTRAINT fk_store_keyword FOREIGN KEY (
        keyword
    ) REFERENCES public.keywords (id)
);


CREATE TABLE public.version_strings (
    id int4 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    xml_path text NOT NULL,
    tag text NULL,
    value_name text NOT NULL,
    CONSTRAINT version_strings_un UNIQUE (xml_path, tag, value_name)
);


CREATE TABLE public.version_details_map (
    id bigint PRIMARY KEY,
    version_code bigint,
    string_id integer REFERENCES public.version_strings (id)
);
